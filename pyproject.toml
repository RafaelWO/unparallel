# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "unparallel"
version = "0.2.0"
description = "Create async web requests in no time"
readme = "README.md"
authors = ["RafaelWO <weingartner.rafael@hotmail.com>"]
license = "MIT"
repository = "https://github.com/RafaelWO/unparallel"
homepage = "https://github.com/RafaelWO/unparallel"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = ["async", "http", "requests", "network"]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [  #! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]



[tool.poetry.dependencies]
python = ">=3.8"
httpx = ">=0.21.0"
tqdm = ">=4.61.2"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.1"
black = "^23.11.0"
isort = {extras = ["colors"], version = "^5.10.1"}
mypy = "^1.7"
mypy-extensions = "^1.0.0"
pre-commit = "^3.5.0"
pydocstyle = "^6.1.1"
pylint = "^3.0.2"
pytest = "^7.4.3"
pyupgrade = "^3.8.0"
safety = "^2.3.5"
coverage = "^7.3.2"
coverage-badge = "^1.1.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.2"
respx = "^0.20.2"
bump2version = "^1.0.1"

[tool.poetry.group.docs.dependencies]
mkdocs-material = "^9.5.1"
mkdocstrings-python = "^1.7.5"
mike = "^2.0.0"

[tool.black]
# https://github.com/psf/black
target-version = ["py38"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 38
line_length = 88

include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.8
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]
branch = true

[tool.coverage.paths]
source = ["unparallel"]

[tool.coverage.report]
fail_under = 90
show_missing = true
